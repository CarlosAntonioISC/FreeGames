// Generated by Dagger (https://dagger.dev).
package tech.carlosktx.freegames.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import tech.carlosktx.freegames.remote.datasource.GamesLocalDataSource;
import tech.carlosktx.freegames.remote.datasource.GamesRemoteDataSource;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GamesRepositoryImpl_Factory implements Factory<GamesRepositoryImpl> {
  private final Provider<GamesRemoteDataSource> remoteDataSourceProvider;

  private final Provider<GamesLocalDataSource> localDataSourceProvider;

  public GamesRepositoryImpl_Factory(Provider<GamesRemoteDataSource> remoteDataSourceProvider,
      Provider<GamesLocalDataSource> localDataSourceProvider) {
    this.remoteDataSourceProvider = remoteDataSourceProvider;
    this.localDataSourceProvider = localDataSourceProvider;
  }

  @Override
  public GamesRepositoryImpl get() {
    return newInstance(remoteDataSourceProvider.get(), localDataSourceProvider.get());
  }

  public static GamesRepositoryImpl_Factory create(
      Provider<GamesRemoteDataSource> remoteDataSourceProvider,
      Provider<GamesLocalDataSource> localDataSourceProvider) {
    return new GamesRepositoryImpl_Factory(remoteDataSourceProvider, localDataSourceProvider);
  }

  public static GamesRepositoryImpl newInstance(GamesRemoteDataSource remoteDataSource,
      GamesLocalDataSource localDataSource) {
    return new GamesRepositoryImpl(remoteDataSource, localDataSource);
  }
}
